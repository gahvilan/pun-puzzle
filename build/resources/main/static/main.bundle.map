{"version":3,"sources":["webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACTX;AACL;AAQpC;IAME,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAL9B,UAAK,GAAG,YAAY,CAAC;QACrB,WAAM,GAAI,CAAC,EAAE,CAAC,CAAC;QACf,cAAS,GAAG,WAAW,CAAC;QACxB,QAAG,GAAG,EAAE,CAAC;IAGT,CAAC;IAED,6BAAM,GAAN,UAAO,IAAY;QAAnB,iBAcC;QAbA,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACzC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uCAAqC,IAAI,YAAS,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CACjF,aAAG;gBACF,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,OAAO,EAAE,CAAC;YACX,CAAC,EACD,aAAG;gBACF,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IAChB,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAa;QACpB,IAAI,CAAC,MAAM,GAAG,CAAC,YAAY,CAAC,CAAC;QAC7B,sGAAsG;QACtG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,GAAG,IAAI,+BAA6B,KAAK,SAAM,CAAC;IACvD,CAAC;IAnCH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;SACnC,CAAC;;oBAAA;IAiCF;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACzCyD;AACjB;AACI;AACF;AAEI;AAc9C;IAAA;IAAyB,CAAC;IAZ1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;ACnB1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,mB;;;;;;;ACAA,kCAAkC,WAAW,6OAA6O,cAAc,gBAAgB,kCAAkC,cAAc,6BAA6B,YAAY,KAAK,wFAAwF,OAAO,oB","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 344;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 344\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Pun Puzzle';\n  result =  [''];\n  textValue = 'Some Word';\n  log = '';\n \n  constructor(private http: Http){\n  }\n \n  search(word: string) {\n  \tlet promise = new Promise((resolve, reject) => {\n  \t\tthis.http.get(`http://localhost:8080/search?word=${word}&max=10`).toPromise().then(\n  \t\t\tres => {\n  \t\t\t\tthis.result = [];\n  \t\t\t\tthis.result = res.json();\n  \t\t\t\tconsole.log(this.result);\n  \t\t\t\tresolve();\n  \t\t\t},\n  \t\t\tmsg => {\n  \t\t\t\treject(msg);\n  \t\t\t});\n  \t});\n  \treturn promise;\n  }\n\n  doSearch(value: string): void {\n    this.result = ['loading...'];\n    //this.http.get(`/search?word='${value}'&max=5`).subscribe(response => this.result = response.text());\n    this.search(value);\n    this.log += `Word Searched changed to '${value}' \\n`;\n  }\n  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 609\n// module chunks = 1","module.exports = \"\\n<h1>Target ({{textValue}})</h1>\\n<input #textbox type=\\\"text\\\" [(ngModel)]=\\\"textValue\\\" required>\\n<button (click)=\\\"doSearch(textbox.value)\\\">Do Search</button>\\n<button (click)=\\\"textValue=''\\\">Clear</button>\\n\\n<h2>Template Reference Variable</h2>\\nType: '{{textbox.type}}', required: '{{textbox.hasAttribute('required')}}',\\nupper: '{{textbox.value.toUpperCase()}}'\\n\\n<pre>{{log}}</pre>\\n<pre>\\n  <span>Results: </span>\\n    <li *ngFor=\\\"let res of result\\\">\\n      {{ res }}\\n    </li>\\n</pre>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 610\n// module chunks = 1"],"sourceRoot":""}